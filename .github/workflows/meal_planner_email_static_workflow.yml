name: Meal planner via Email (static)

on:
  schedule:
    # 11:00 UTC = 08:00 São Paulo (domingo)
    - cron: '0 11 * * SUN'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      MEAL_PLANNER_EMAIL: ${{ secrets.MEAL_PLANNER_EMAIL }}
      MEAL_PLANNER_PASS:  ${{ secrets.MEAL_PLANNER_PASS }}
      RECIPIENT_EMAIL:     ${{ secrets.RECIPIENT_EMAIL }}
      # Opcional: SMTP_SERVER / SMTP_PORT / RECIPES_FILE

    steps:
      - uses: actions/checkout@v4

      - name: Provisionar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Diagnóstico inicial
        run: |
          echo "Diretório atual:"
          pwd
          echo "Lista de arquivos:"
          ls -la
          echo "Verificando script..."
          test -f meal_planner_email_static.py && echo "OK: meal_planner_email_static.py encontrado" || (echo "ERRO: meal_planner_email_static.py não encontrado na raiz" && exit 1)

      - name: Verificar/gerar recipes_static.json
        run: |
          if [ ! -f "recipes_static.json" ]; then
            echo "ATENÇÃO: recipes_static.json não encontrado. Gerando um arquivo mínimo para evitar falha."
            cat > recipes_static.json <<'EOF'
            [
              { "name": "Frango assado com ervas", "url": "https://exemplo.com/frango-ervas" },
              { "name": "Macarrão ao pesto", "url": "https://exemplo.com/macarrao-pesto" },
              { "name": "Arroz de forno com legumes", "url": "https://exemplo.com/arroz-forno" },
              { "name": "Omelete de queijo e espinafre", "url": "https://exemplo.com/omelete-espinafre" },
              { "name": "Tilápia grelhada com limão", "url": "https://exemplo.com/tilapia-limao" }
            ]
            EOF
          else
            echo "OK: recipes_static.json encontrado."
          fi
          echo "Conteúdo (primeiras linhas):"
          head -n 20 recipes_static.json || true

      - name: Validar presença dos segredos (sem revelar valores)
        run: |
          [ -z "${MEAL_PLANNER_EMAIL}" ] && { echo "ERRO: MEAL_PLANNER_EMAIL não definido"; exit 1; } || echo "OK: MEAL_PLANNER_EMAIL definido"
          [ -z "${MEAL_PLANNER_PASS}" ]  && { echo "ERRO: MEAL_PLANNER_PASS não definido";  exit 1; } || echo "OK: MEAL_PLANNER_PASS definido"
          [ -z "${RECIPIENT_EMAIL}" ]    && { echo "ERRO: RECIPIENT_EMAIL não definido";    exit 1; } || echo "OK: RECIPIENT_EMAIL definido"

      - name: Enviar cardápio (5 dias, estático, sem ingredientes)
        run: python -u meal_planner_email_static.py
